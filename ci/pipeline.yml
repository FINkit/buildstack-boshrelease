---
resource_types:
- name: google-cloud-storage
  type: docker-image
  source:
    repository: frodenas/gcs-resource
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: bbl-state
  type: git
  source:
    branch: master
    uri: ((bbl-state-url))
    username: ((git-credentials.username))
    password: ((git-credentials.password))
- name: bosh-bootloader
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader.git
- name: bosh-deployment
  type: bosh-deployment
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: devtools-boshrelease
  type: git
  source:
    <<: &devtools-boshrelease-git-source
      uri: git@github.com:finkit/devtools-boshrelease
      branch: master
      private_key: ((github-finkit-ssh-key))
    ignore_paths:
    - ci/**
- name: devtools-boshrelease-ci
  type: git
  source:
    <<: *devtools-boshrelease-git-source
    paths:
    - ci/**
- name: dev-release-tarball
  type: google-cloud-storage
  source:
    bucket: ((dev-build-automate-release-tarballs.bucket))
    json_key: ((concourse_project_google_key))
    versioned_file: devtools-boshrelease/dev-release.tgz
- name: warden-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent
- name: github-prerelease
  type: github-release
  source:
    <<: &github-release-source
      owner: finkit
      repository: devtools-boshrelease
      access_token: ((github-access-token))
    # https://github.com/concourse/github-release-resource/issues/40
    pre_release: true
    release: false
- name: github-release
  type: github-release
  source:
    <<: *github-release-source
- name: version
  type: semver
  source:
    driver: gcs 
    bucket: ((dev-build-automate-release-tarballs.bucket))
    json_key: ((concourse_project_google_key))
    initial_version: 0.0.0
    key: version

jobs:
- name: create-dev-release
  plan:
  - aggregate:
    - get: devtools-boshrelease
      trigger: true
    - get: devtools-boshrelease-ci
  - task: create-release
    file: devtools-boshrelease-ci/ci/tasks/create-dev-release.yml
  - put: dev-release-tarball
    params: { file: dev-release-tarball/dev-release.tgz }

- name: deploy-bosh
  serial_groups: [bbl]
  plan:
  - aggregate:
    - get: bbl-state
    - get: bosh-bootloader
    - get: cf-deployment-concourse-tasks
    - get: devtools-boshrelease
      trigger: true
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: bosh-bootloader
      bbl-state: bbl-state
    output_mapping:
      updated-bbl-state: updated-bbl-state
    params:
      BBL_CONFIG_DIR: plan-patches/bosh-lite-gcp
      BBL_ENV_NAME: devtools-boshrelease
      BBL_GCP_REGION: ((gcp.region))
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp.key))
      BBL_IAAS: gcp
      SKIP_LB_CREATION: true
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: test-gerrit
  serial: true
  plan:
  - aggregate: &get-test-resources
    - get: bbl-state
      passed:
      - deploy-bosh
    - get: cf-deployment-concourse-tasks
    - get: devtools-boshrelease
      passed:
      - create-dev-release
      - deploy-bosh
    - get: devtools-boshrelease-ci
    - get: dev-release-tarball
      passed: [create-dev-release]
      trigger: true
    - get: warden-stemcell
  - aggregate:
    - do:
      - task: create-gerrit-bosh-config
        file: devtools-boshrelease-ci/ci/tasks/create-bosh-config.yml
        params:
          BOSH_DEPLOYMENT: &gerrit-deployment-name gerrit
      - put: bosh-deployment # Deploy Gerrit instance
        params:
          source_file: source/source.yml
          manifest: devtools-boshrelease-ci/ci/manifests/gerrit.yml
          releases:
          - dev-release-tarball/dev-release.tgz
          stemcells:
          - warden-stemcell/stemcell.tgz
          vars:
            deployment_name: *gerrit-deployment-name
      - task: test-gerrit-curl
        file: devtools-boshrelease-ci/ci/tasks/test-gerrit-curl.yml
        params:
          BOSH_DEPLOYMENT: *gerrit-deployment-name
      - put: bosh-deployment # Destroy Gerrit instance
        params:
          source_file: source/source.yml
          delete:
            enabled: true
            force: true
          vars:
            deployment_name: *gerrit-deployment-name

- name: test-jenkins
  serial: true
  plan:
  - aggregate: *get-test-resources
  - aggregate:
    - do:
      - task: create-jenkins-bosh-config
        file: devtools-boshrelease-ci/ci/tasks/create-bosh-config.yml
        params:
          BOSH_DEPLOYMENT: &jenkins-deployment-name jenkins
      - put: bosh-deployment # Deploy Jenkins instance
        params:
          source_file: source/source.yml
          manifest: devtools-boshrelease-ci/ci/manifests/jenkins.yml
          releases:
          - dev-release-tarball/dev-release.tgz
          stemcells:
          - warden-stemcell/stemcell.tgz
          vars:
            deployment_name: *jenkins-deployment-name
      - task: test-jenkins-curl
        file: devtools-boshrelease-ci/ci/tasks/test-jenkins-curl.yml
        params:
          BOSH_DEPLOYMENT: *jenkins-deployment-name
      - put: bosh-deployment # Destroy Jenkins instance
        params:
          source_file: source/source.yml
          delete:
            enabled: true
            force: true
          vars:
            deployment_name: *jenkins-deployment-name

- name: test-nexus
  serial: true
  plan:
  - aggregate: *get-test-resources
  - aggregate:
    - do:
      - task: create-nexus-bosh-config
        params:
          BOSH_DEPLOYMENT: &nexus-deployment-name nexus
        file: devtools-boshrelease-ci/ci/tasks/create-bosh-config.yml
      - put: bosh-deployment # Deploy Nexus instance
        params:
          source_file: source/source.yml
          manifest: devtools-boshrelease-ci/ci/manifests/nexus.yml
          releases:
          - dev-release-tarball/dev-release.tgz
          stemcells:
          - warden-stemcell/stemcell.tgz
          vars:
            deployment_name: *nexus-deployment-name
      - task: test-nexus-curl
        file: devtools-boshrelease-ci/ci/tasks/test-nexus-curl.yml
        params:
          BOSH_DEPLOYMENT: *nexus-deployment-name
      - put: bosh-deployment # Destroy Nexus instance
        params:
          source_file: source/source.yml
          delete:
            enabled: true
            force: true
          vars:
            deployment_name: *nexus-deployment-name

- name: test-sonarqube
  serial: true
  plan:
  - aggregate: *get-test-resources
  - aggregate:
    - do:
      - task: create-sonarqube-bosh-config
        params:
          BOSH_DEPLOYMENT: &sonarqube-deployment-name sonarqube
        file: devtools-boshrelease-ci/ci/tasks/create-bosh-config.yml
      - put: bosh-deployment # Deploy sonarqube instance
        params:
          source_file: source/source.yml
          manifest: devtools-boshrelease-ci/ci/manifests/sonarqube.yml
          releases:
          - dev-release-tarball/dev-release.tgz
          stemcells:
          - warden-stemcell/stemcell.tgz
          vars:
            deployment_name: *sonarqube-deployment-name
      - task: test-sonarqube-curl
        file: devtools-boshrelease-ci/ci/tasks/test-sonarqube-curl.yml
        params:
          BOSH_DEPLOYMENT: *sonarqube-deployment-name
      - put: bosh-deployment # Destroy sonarqube instance
        params:
          source_file: source/source.yml
          delete:
            enabled: true
            force: true
          vars:
            deployment_name: *sonarqube-deployment-name

- name: destroy-bosh
  serial_groups: [bbl]
  plan:
  - aggregate:
    - get: bbl-state
      passed: &tests
      - test-gerrit
      - test-jenkins
      - test-nexus
      - test-sonarqube
    - get: cf-deployment-concourse-tasks
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: bbl-state
    output_mapping:
      updated-bbl-state: updated-bbl-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp.key))
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: release-final
  serial_groups: [github-release]
  plan:
  - put: version
    params: {bump: final}
  - do: &do-release
    - aggregate:
      - get: devtools-boshrelease
        passed: *tests
      - get: devtools-boshrelease-ci
    - task: create-release
      file: devtools-boshrelease-ci/ci/tasks/create-final-release.yml
    - put: github-release
      params: &put-github-release-params
        name: version/version
        tag: version/version
        tag_prefix: v
        globs: 
        - final-release-tarball/*.tgz

- name: prerelease-major
  serial_groups: [github-release]
  plan:
  - put: version
    params:
      bump: major
      pre: rc
  - do: &do-prerelease
    - aggregate:
      - get: devtools-boshrelease
        passed: *tests
      - get: devtools-boshrelease-ci
    - task: create-release
      file: devtools-boshrelease-ci/ci/tasks/create-final-release.yml
    - put: github-prerelease
      params: *put-github-release-params

- name: prerelease-minor
  serial_groups: [github-release]
  plan:
  - put: version
    params:
      bump: minor
      pre: rc
  - do: *do-prerelease

- name: prerelease-patch
  serial_groups: [github-release]
  plan:
  - put: version
    params:
      bump: patch
      pre: rc
  - do: *do-prerelease

