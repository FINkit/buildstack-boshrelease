---
resource_types:
- name: google-cloud-storage
  type: docker-image
  source:
    repository: frodenas/gcs-resource
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: bbl-state
  type: git
  source:
    branch: master
    uri: ((bbl-state-url))
    username: ((git-credentials.username))
    password: ((git-credentials.password))
- name: bosh-deployment
  type: bosh-deployment
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
- name: devtools-boshrelease
  type: git
  source:
    uri: git@github.com:finkit/devtools-boshrelease
    branch: master
    private_key: ((github-finkit-ssh-key))
    ignore_paths:
    - ci/**
- name: dev-release-tarball
  type: google-cloud-storage
  source:
    bucket: ((dev-build-automate-release-tarballs.bucket))
    json_key: ((concourse_project_google_key))
    versioned_file: devtools-boshrelease/dev-release.tgz
- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent
- name: github-release
  type: github-release
  source:
    owner: finkit
    repository: devtools-boshrelease
    access_token: ((github-access-token))
- name: version
  type: semver
  source:
    driver: gcs 
    bucket: ((dev-build-automate-release-tarballs.bucket))
    json_key: ((concourse_project_google_key))
    initial_version: 0.0.0
    key: version

jobs:
- name: create-dev-release
  plan:
  - aggregate:
    - get: devtools-boshrelease
      trigger: true
  - task: create-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: engineerbetter/pcf-ops
      inputs:
      - name: devtools-boshrelease
      outputs:
      - name: dev-release-tarball
      run:
        path: bash
        args:
        - -c
        - |
          mkdir -p dev-release-tarball/devtools-boshrelease
          bosh create-release \
            --tarball=dev-release-tarball/devtools-boshrelease/dev-release.tgz \
            --dir=devtools-boshrelease \
            --timestamp-version
  - put: dev-release-tarball
    params: { file: dev-release-tarball/devtools-boshrelease/dev-release.tgz }

- name: deploy-bosh
  serial: true
  plan:
  - aggregate:
    - get: bbl-state
    - get: cf-deployment-concourse-tasks
    - get: devtools-boshrelease
      trigger: true
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-config: bbl-state
      bbl-state: bbl-state
    output_mapping:
      updated-bbl-state: updated-bbl-state
    params:
      BBL_ENV_NAME: devtools-boshrelease
      BBL_GCP_REGION: ((gcp.region))
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp.key))
      BBL_IAAS: gcp
      SKIP_LB_CREATION: true
    ensure:
      put: bbl-state
      params:
        repository: updated-bbl-state
        rebase: true

- name: test-jenkins
  serial: true
  plan:
  - aggregate:
    - get: bbl-state
      passed: [deploy-bosh]
    - get: cf-deployment-concourse-tasks
    - get: devtools-boshrelease
    - get: gcp-stemcell
    - get: dev-release-tarball
      passed: [create-dev-release]
      trigger: true
  - aggregate:
    - do:
      - task: create-jenkins-bosh-config
        params:
          BOSH_DEPLOYMENT: &jenkins-deployment-name jenkins
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: engineerbetter/pcf-ops
          inputs:
          - name: bbl-state
          outputs:
          - name: source
          run:
            path: bash
            args:
            - -c
            - |
              set -euo pipefail
              eval "$(cd bbl-state/bbl-state; bbl print-env)"
              jq -n \
              --arg "deployment" "$BOSH_DEPLOYMENT" \
              --arg "target" "$BOSH_ENVIRONMENT" \
              --arg "client" "$BOSH_CLIENT" \
              --arg "client_secret" "$BOSH_CLIENT_SECRET" \
              --arg "ca_cert" "$BOSH_CA_CERT" \
              --arg "jumpbox_url" "$(sed 's/.*@\(.*\):.*/\1:22/' <<< "$BOSH_ALL_PROXY")" \
              --arg "jumpbox_ssh_key" "$(<$JUMPBOX_PRIVATE_KEY)" \
              --arg "jumpbox_username" "jumpbox" \
              '{
                  "deployment": $deployment,
                  "target": $target,
                  "client": $client,
                  "client_secret": $client_secret,
                  "ca_cert": $ca_cert,
                  "jumpbox_url": $jumpbox_url,
                  "jumpbox_ssh_key": $jumpbox_ssh_key,
                  "jumpbox_username": $jumpbox_username
              }' > source/source.yml
      - put: bosh-deployment # Deploy Jenkins instance
        params:
          source_file: source/source.yml
          manifest: devtools-boshrelease/ci/manifests/jenkins.yml
          releases:
          - dev-release-tarball/dev-release.tgz
          stemcells:
          - gcp-stemcell/stemcell.tgz
          vars:
            deployment_name: *jenkins-deployment-name
      - task: curl-jenkins-home
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: engineerbetter/pcf-ops
          inputs:
          - name: bbl-state
          run:
            path: /bin/bash
            env:
              BOSH_DEPLOYMENT: *jenkins-deployment-name
            args:
            - -c
            - |
              cd bbl-state/bbl-state
              source <(bbl print-env)
              sleep 10 # Sleeping because this curl lacks the --retry-connrefused
              bosh -d $BOSH_DEPLOYMENT ssh jenkins-master/0 -c "curl -S --retry-max-time 300 --retry-delay 1 --retry 300 http://localhost:8080/login"
      - put: bosh-deployment # Destroy Jenkins instance
        params:
          source_file: source/source.yml
          delete:
            enabled: true
            force: true
          vars:
            deployment_name: *jenkins-deployment-name

  #- name: destroy-bosh
  #  serial: true
  #  plan:
  #  - aggregate:
  #    - get: bbl-state
  #      passed: [test-jenkins]
  #    - get: cf-deployment-concourse-tasks
  #  - task: bbl-destroy
  #    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
  #    input_mapping:
  #      bbl-state: bbl-state
  #    output_mapping:
  #      updated-bbl-state: updated-bbl-state
  #    params:
  #      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcp.key))
  #    ensure:
  #      put: bbl-state
  #      params:
  #        repository: updated-bbl-state
  #        rebase: true

- name: release-final
  serial: true
  plan:
  - put: version
    params: {bump: final}
  - do: &do-release
    - aggregate:
      - get: devtools-boshrelease
        passed: [test-jenkins]
    - task: create-release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: engineerbetter/pcf-ops
        inputs:
        - name: devtools-boshrelease
        - name: version
        outputs:
        - name: final-release-tarball
        run:
          path: bash
          args:
          - -c
          - |
            version=$(<version/version)
            bosh create-release \
              --tarball=final-release-tarball/devtools-boshrelease-v$version.tgz \
              --dir=devtools-boshrelease \
              --final \
              --version="$version"
    - put: github-release
      params:
        name: version/version
        tag: version/version
        tag_prefix: v
        globs: 
        - final-release-tarball/*.tgz

- name: prerelease-major
  serial: true
  plan:
  - put: version
    params:
      bump: major
      pre: rc
  - do: *do-release

- name: prerelease-minor
  serial: true
  plan:
  - put: version
    params:
      bump: minor
      pre: rc
  - do: *do-release

- name: prerelease-patch
  serial: true
  plan:
  - put: version
    params:
      bump: patch
      pre: rc
  - do: *do-release

